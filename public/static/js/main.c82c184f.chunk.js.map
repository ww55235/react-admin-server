{"version":3,"sources":["api/ajax.js","api/index.js","utils/storageUtils.js","redux/createActions.js","redux/createTypes.js","pages/ligon/Login.jsx","filters/dateFormate.js","config/menuConfig.js","components/linkButton/LinkButton.jsx","components/header/Header.jsx","components/left-nav/LeftNav.jsx","pages/home/Home.jsx","pages/category/addCategory/addCategorys.jsx","pages/category/updateCategory/updateCategory.jsx","pages/category/Category.jsx","pages/product/productHome.jsx","utils/constants.js","pages/product/RichTextEditor.jsx","pages/product/photoWall.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/Product.jsx","pages/role/addRole.jsx","pages/role/addAuth.jsx","pages/role/Role.jsx","pages/user/adduser.jsx","pages/user/User.jsx","pages/charts/Bar.jsx","pages/charts/Line.jsx","pages/charts/Pie.jsx","pages/notFound/NotFound.jsx","pages/admin/Admin.jsx","App.jsx","redux/reducer.js","redux/store.js","index.js","pages/ligon/image/logo.png","assets/images/logo.png"],"names":["url","data","type","Promise","resolve","reject","axios","get","params","then","response","catch","error","message","post","reqLogin","username","password","ajax","reqAddOrUpdateUser","user","_id","reqWeather","city","jsonp","err","status","results","weather_data","dayPictureUrl","weather","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","reqUpdateCategoryStatus","productId","reqDeleteImg","name","reqAddOrUpdateProduct","product","reqAddRole","roleName","reqUpdateRole","role","reqGetUsers","reqDeltetUser","userId","store","set","remove","set_header_title","headertitle","loginOut","storageUtils","receive_user","Login","handleValidator","rule","value","callback","length","handleSubmit","e","preventDefault","props","form","validateFields","values","a","console","log","login","this","to","errorMsg","getFieldDecorator","className","src","logo","alt","style","position","backgroundColor","textAlign","left","top","onSubmit","Item","rules","required","whitespace","min","max","pattern","prefix","color","placeholder","validator","htmlType","Component","Wripper","create","connect","state","dispatch","result","msg","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","title","key","icon","isPublic","children","LinkButton","React","confirm","Header","getTime","intervalId","setInterval","currentTime","dateFormate","now","setState","getWeather","getTitle","pathname","location","forEach","item","childrenItem","find","startsWith","_this","okText","okType","cancelText","onOk","clearInterval","headerTitle","onClick","withRouter","SubMenu","LeftNav","hasAuth","menus","includes","cItem","getMenuList","history","map","openKey","img","width","selectedKeys","defaultOpenKeys","mode","theme","Home","AddCategory","setForm","categorys","initialValue","Option","WrappedAddCategory","UpdateCategory","WrappedUpdateCategory","Category","getSubCategorys","category","parentName","getCategorys","initColumns","columns","dataIndex","render","showUpdateCategory","loading","subCategorys","showFirstCategory","showStatus","updateCategory","handleCancel","showAddCategory","addCategory","resetFields","marginRight","extra","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","ProductHome","updateStatus","success","getProducts","price","marginTop","push","list","total","products","onChange","margin","currentTarget","current","uploadImageCallBack","file","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","RichTextEditor","getDetail","editorState","draftToHtml","convertToRaw","getCurrentContent","onEditorStateChange","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","editorStyle","border","paddingLeft","minHeight","toolbar","inline","inDropdown","image","uploadCallback","present","mandatory","getBase64","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","getImgs","fileList","previewVisible","handlePreview","preview","originFileObj","previewImage","handleChange","imgs","index","uid","uploadButton","action","listType","accept","onPreview","footer","TextArea","AddProduct","options","loadData","selectedOptions","targetOption","subOptions","childItem","label","isLeaf","validatorPrice","submitHandler","photoWall","desc","pCategoryId","isUpdate","goBack","getInitOptions","newCategorys","childrenOptions","option","createRef","formItemLayout","labelCol","span","wrapperCol","autosize","minRows","maxRows","addonAfter","ref","Detail","cNameOne","cNameTwo","all","imgItem","dangerouslySetInnerHTML","__html","Product","path","exact","component","AddUpdateProduct","AddRole","TreeNode","AddAuth","getAuthMenu","checkedKeys","onCheck","initTree","reduce","prev","nextProps","getTreeNode","disabled","checkable","defaultExpandAll","Role","getRoles","roles","getColumns","addRole","showAdd","updateAuth","authMenu","auth_name","auth_time","role_id","showAuth","onRow","event","rowSelection","selectedRowKeys","onSelect","AddUser","phone","email","PureComponent","User","users","isShow","addOrUpdateUser","getFieldsValue","getUsers","deltetUser","showUpdate","roleNames","getRoleNames","pre","Bar","sales","inventorys","getOption","text","tooltip","legend","xAxis","yAxis","series","update","sale","inventory","height","Line","Pie","subtext","x","trigger","formatter","orient","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","NotFound","goHome","replace","Footer","Sider","Content","Admin","from","App","initUser","storage","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c82c184f.chunk.js","sourcesContent":["//封装axios请求\r\n\r\n//引入axios库文件\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { message } from \"antd\";\r\n\r\n//导出函数\r\nexport default function (url, data = {}, type = \"get\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    if (type === \"get\") {\r\n      promise = axios.get(url, {\r\n        params: data,\r\n      });\r\n\r\n      promise\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(\"请求出错了\" + error.message);\r\n        });\r\n    } else {\r\n      promise = axios.post(url, data);\r\n      promise\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          message.error(\"请求出错了\" + error.message);\r\n        });\r\n    }\r\n  });\r\n}\r\n","//定义请求对应的接口路径\r\n\r\nimport jsonp from \"jsonp\";\r\n\r\nimport ajax from \"./ajax\";\r\n\r\nimport { message } from \"antd\";\r\n\r\nconst BASE = \"\";\r\n\r\nexport const reqLogin = (username, password) =>\r\n  ajax(BASE + \"/login\", { username, password }, \"post\");\r\n\r\nexport const reqAddOrUpdateUser = (user) =>\r\n  ajax(BASE + \"/manage/user/\" + (user._id ? \"update\" : \"add\"), user, \"post\");\r\n\r\nexport const reqWeather = (city) => {\r\n  return new Promise((resolve, reject) => {\r\n    //定义url\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n    //发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      // console.log(\"jsonp()\", err, data);\r\n\r\n      if (!err && data.status === \"success\") {\r\n        //取出需要的数据\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0];\r\n        // console.log(dayPictureUrl, weather);\r\n        resolve({ dayPictureUrl, weather });\r\n      } else {\r\n        //失败\r\n        message.error(\"获取数据失败\");\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n//查询分类数据\r\nexport const reqCategorys = (parentId) =>\r\n  ajax(BASE + \"/manage/category/list\", { parentId });\r\n\r\n//添加分类数据\r\nexport const reqAddCategory = ({ parentId, categoryName }) =>\r\n  ajax(BASE + \"/manage/category/add\", { parentId, categoryName }, \"POST\");\r\n\r\n//修改分类数据\r\nexport const reqUpdateCategory = ({ categoryId, categoryName }) =>\r\n  ajax(BASE + \"/manage/category/update\", { categoryId, categoryName }, \"POST\");\r\n\r\n//请求商品数据\r\n\r\nexport const reqProducts = (pageNum, pageSize) =>\r\n  ajax(BASE + \"/manage/product/list\", { pageNum, pageSize });\r\n\r\n//根据条件(商品名称/商品描述)查询商品数据  productName/productDesc\r\nexport const reqSearchProducts = ({\r\n  pageNum,\r\n  pageSize,\r\n  searchName,\r\n  searchType,\r\n}) =>\r\n  ajax(BASE + \"/manage/product/search\", {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName,\r\n  });\r\n\r\n//根据分类ID获取分类\r\n\r\nexport const reqCategory = (categoryId) =>\r\n  ajax(BASE + \"/manage/category/info\", { categoryId });\r\n\r\n//修改上架/下架操作\r\nexport const reqUpdateCategoryStatus = (productId, status) =>\r\n  ajax(BASE + \"/manage/product/updateStatus\", { productId, status }, \"post\");\r\n\r\n//删除图片\r\nexport const reqDeleteImg = (name) =>\r\n  ajax(BASE + \"/manage/img/delete\", { name }, \"post\");\r\n\r\n//添加/更新商品\r\n\r\nexport const reqAddOrUpdateProduct = (product) =>\r\n  ajax(\r\n    BASE + \"/manage/product/\" + (product._id ? \"update\" : \"add\"),\r\n    product,\r\n    \"post\"\r\n  );\r\n\r\n//获取角色列表\r\nexport const reqGetRoles = () => ajax(BASE + \"/manage/role/list\");\r\n\r\n//添加一个角色\r\nexport const reqAddRole = (roleName) =>\r\n  ajax(BASE + \"/manage/role/add\", { roleName }, \"post\");\r\n\r\n//更新角色权限\r\nexport const reqUpdateRole = (role) =>\r\n  ajax(BASE + \"/manage/role/update\", role, \"post\");\r\n\r\n//获取所有的用户信息\r\n\r\nexport const reqGetUsers = () => ajax(BASE + \"/manage/user/list\");\r\n\r\n//删除用户数据\r\nexport const reqDeltetUser = (userId) =>\r\n  ajax(BASE + \"/manage/user/delete\", { userId }, \"post\");\r\n","//引入store处理兼容性问题\r\nimport store from \"store\";\r\n\r\n//定义一个常量用来保存key值\r\nconst USER_KEY = \"user_key\";\r\n\r\nexport default {\r\n  //保存用户信息值\r\n  saveUser(user) {\r\n    //localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n    store.set(USER_KEY, user);\r\n  },\r\n  //获取值\r\n  getUser() {\r\n    //const user = localStorage.getItem(USER_KEY);\r\n    //return JSON.parse(user || \"{}\");\r\n    return store.get(USER_KEY) || {};\r\n  },\r\n  //删除值\r\n  removeUser() {\r\n    //localStorage.removeItem(USER_KEY);\r\n    store.remove(USER_KEY);\r\n  },\r\n};\r\n","import {\r\n  SET_HEADER_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER,\r\n} from \"./createTypes\";\r\n\r\nimport { reqLogin } from \"../api/index\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\n//同步设置头部标题的action\r\nexport const set_header_title = (headertitle) => ({\r\n  type: SET_HEADER_TITLE,\r\n  data: headertitle,\r\n});\r\n\r\n//重置用户信息\r\nexport const loginOut = () => {\r\n  storageUtils.removeUser();\r\n  return {\r\n    type: RESET_USER,\r\n  };\r\n};\r\n\r\nexport const receive_user = (user) => ({\r\n  type: RECEIVE_USER,\r\n  user,\r\n});\r\n\r\n//显示同步请求失败的action\r\n\r\nexport const showErrorMsg = (errorMsg) => ({\r\n  type: SHOW_ERROR_MSG,\r\n  errorMsg,\r\n});\r\n\r\n//登陆的异步action\r\nexport const login = (username, password) => {\r\n  return async (dispatch) => {\r\n    //发送ajax请求\r\n    const result = await reqLogin(username, password);\r\n    //请求成功\r\n    if (result.status === 0) {\r\n      const user = result.data;\r\n      //保存到localstorage中\r\n      storageUtils.saveUser(user);\r\n      dispatch(receive_user(user));\r\n    } else {\r\n      //失败\r\n      let error = result.msg;\r\n      dispatch(showErrorMsg(error));\r\n    }\r\n  };\r\n};\r\n","export const SET_HEADER_TITLE = \"set_header_title\";\r\n\r\nexport const RECEIVE_USER = \"receive_user\";\r\n\r\nexport const SHOW_ERROR_MSG = \"show_error_msg\";\r\n\r\nexport const RESET_USER = \"reset_user\";\r\n","import React, { Component } from \"react\";\r\n\r\n//导图antd组件\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\n\r\n// import { reqLogin } from \"../../api/index\";\r\n\r\n//import memoryUtils from \"../../utils/memoryUtils\";\r\n\r\n//import storageUtils from \"../../utils/storageUtils\";\r\n\r\nimport { login } from \"../../redux/createActions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n//导入logo图片\r\nimport logo from \"./image/logo.png\";\r\n\r\n//引入样式\r\nimport \"./login.less\";\r\n\r\n//登录组件\r\nclass Login extends Component {\r\n  //密码框自定义验证\r\n  handleValidator = (rule, value, callback) => {\r\n    //console.log(value.length);\r\n    //根据值进行判断\r\n    if (value.length < 4) {\r\n      callback(\"用户名不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"用户名不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/) {\r\n      callback(\"用户名由数字、字母、下划线组成\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  //form表单提交\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); //阻止form表单的默认提交行为\r\n    this.props.form.validateFields(async (err, values) => {\r\n      const { username, password } = values;\r\n      //如果验证通过\r\n      if (!err) {\r\n        this.props.login(username, password);\r\n\r\n        // //console.log(\"校验成功\", values);\r\n        // const result = await reqLogin(username, password);\r\n        // //console.log(response.data);\r\n        // //成功的状态\r\n        // if (result.status === 0) {\r\n        //   message.success(\"登陆成功\");\r\n        //   //console.log(result);\r\n        //   const user = result.data;\r\n        //   //console.log(user);\r\n        //   //保存在内存中\r\n        //   memoryUtils.user = user;\r\n        //   //存储到本地(local)中\r\n        //   storageUtils.saveUser(user);\r\n        //   //跳转到管理界面,登陆后不需要进行回退，所以使用replace\r\n        //   this.props.history.replace(\"/home\");\r\n        // } else {\r\n        //   //失败\r\n        //   message.error(result.msg);\r\n        // }\r\n      } else {\r\n        console.log(\"校验失败\");\r\n      }\r\n    });\r\n\r\n    // const { getFieldsValue } = this.props.form;\r\n    //const values = getFieldsValue();\r\n    // console.log(this.props);\r\n    //console.log(values);\r\n  };\r\n  render() {\r\n    //console.log(memoryUtils);\r\n    //const { user } = memoryUtils; //{}\r\n    const user = this.props.user;\r\n    //console.log(user);\r\n    //判断有没有值\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    const errorMsg = this.props.user.errorMsg;\r\n\r\n    //得到传过来的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img className=\"logo\" src={logo} alt=\"logo\" />\r\n          <h1 className=\"title\">React项目:后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\" style={{ position: \"relative\" }}>\r\n          <h2\r\n            style={{\r\n              backgroundColor: \"red\",\r\n              textAlign: \"center\",\r\n              position: \"absolute\",\r\n              left: \"40%\",\r\n              top: 0,\r\n            }}\r\n          >\r\n            {errorMsg}\r\n          </h2>\r\n          <h1>用户登陆</h1>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {/* 声明式验证 */}\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\",\r\n                  },\r\n                  { min: 4, message: \"用户名最少为4位\" },\r\n                  { max: 12, message: \"用户名最多为12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须由数字、字母、下划线组成\",\r\n                  },\r\n                ],\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {/* 自定义验证 */}\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [{ validator: this.handleValidator }],\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Wripper = Form.create()(Login);\r\n\r\nexport default connect((state) => ({ user: state.user }), { login })(Wripper);\r\n","export default function (time) {\r\n  if (!time) {\r\n    return \"\";\r\n  }\r\n  //定义一个日期对象\r\n  const date = new Date(time);\r\n\r\n  return (\r\n    date.getFullYear() +\r\n    \"-\" +\r\n    (date.getMonth() + 1) +\r\n    \"-\" +\r\n    date.getDate() +\r\n    \" \" +\r\n    date.getHours() +\r\n    \":\" +\r\n    date.getMinutes() +\r\n    \":\" +\r\n    date.getSeconds()\r\n  );\r\n}\r\n","const menuList = [\r\n  {\r\n    title: \" 首页\", // 菜单标题名称\r\n    key: \"/home\", // 对应的 path\r\n    icon: \"home\", // 图标名称\r\n    isPublic: true, //是否公开访问\r\n  },\r\n  {\r\n    title: \" 商品\",\r\n    key: \"/products\",\r\n    icon: \"appstore\",\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \" 品类管理\",\r\n        key: \"/category\",\r\n        icon: \"bars\",\r\n      },\r\n      {\r\n        title: \" 商品管理\",\r\n        key: \"/product\",\r\n        icon: \"tool\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \" 用户管理\",\r\n    key: \"/user\",\r\n    icon: \"user\",\r\n  },\r\n  {\r\n    title: \" 角色管理\",\r\n    key: \"/role\",\r\n    icon: \"safety\",\r\n  },\r\n  {\r\n    title: \" 图形图表\",\r\n    key: \"/charts\",\r\n    icon: \"area-chart\",\r\n    children: [\r\n      {\r\n        title: \" 柱形图\",\r\n        key: \"/charts/bar\",\r\n        icon: \"bar-chart\",\r\n      },\r\n      {\r\n        title: \" 折线图\",\r\n        key: \"/charts/line\",\r\n        icon: \"line-chart\",\r\n      },\r\n      {\r\n        title: \" 饼图\",\r\n        key: \"/charts/pie\",\r\n        icon: \"pie-chart\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n// 默认导出\r\nexport default menuList;\r\n","import React from \"react\";\r\nimport \"./index.less\";\r\n\r\n//函数式组件\r\n// export default function (props) {\r\n//   // console.log(props);\r\n//   return (\r\n//     <button className=\"link-button\" {...props}>\r\n//       {props.children}\r\n//     </button>\r\n//   );\r\n// }\r\n\r\n//类定义组件\r\n\r\nexport default class LinkButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <button className=\"link-button\" {...this.props}>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./index.less\";\r\n\r\nimport dateFormate from \"../../filters/dateFormate\";\r\n\r\n//import memoryUtils from \"../../utils/memoryUtils\";\r\n\r\n//import storageUtils from \"../../utils/storageUtils\";\r\n\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nimport { reqWeather } from \"../../api/index\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport LinkButton from \"../linkButton/LinkButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Modal } from \"antd\";\r\n\r\nimport { loginOut } from \"../../redux/createActions\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //定义状态\r\n    this.state = {\r\n      currentTime: dateFormate(Date.now()),\r\n      weather: \"\",\r\n      dayPictureUrl: \"\",\r\n    };\r\n  }\r\n\r\n  //获取当前时间，并更新\r\n  getTime = () => {\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = dateFormate(Date.now());\r\n      this.setState({\r\n        currentTime,\r\n      });\r\n    }, 1000);\r\n  };\r\n  //获取天气\r\n  getWeather = async () => {\r\n    const result = await reqWeather(\"宜章\");\r\n    const { dayPictureUrl, weather } = result;\r\n    //更新状态\r\n    this.setState({\r\n      dayPictureUrl,\r\n      weather,\r\n    });\r\n  };\r\n\r\n  getTitle = () => {\r\n    //取出当前路由对应的路径\r\n    const { pathname } = this.props.location;\r\n    //用来保存标题信息\r\n    let title;\r\n    //数组遍历\r\n    menuList.forEach((item) => {\r\n      if (item.key === pathname) {\r\n        title = item.title;\r\n      } else if (item.children) {\r\n        let childrenItem = item.children.find((childrenItem) =>\r\n          pathname.startsWith(childrenItem.key)\r\n        );\r\n        if (childrenItem) {\r\n          // console.log(childrenItem);\r\n          title = childrenItem.title;\r\n        }\r\n      }\r\n    });\r\n    return title;\r\n  };\r\n\r\n  //第一次render之后执行 ，一般在此执行异步任务(启动定时器，发ajax请求等)\r\n  componentDidMount() {\r\n    //获取时间\r\n    this.getTime();\r\n    //获取天气\r\n    this.getWeather();\r\n  }\r\n\r\n  //清除定时器 组件即将销毁的时候\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n  loginOut = (e) => {\r\n    const _this = this;\r\n    //阻止默认跳转事件\r\n    e.preventDefault();\r\n    confirm({\r\n      title: \"你确定要退出吗?\",\r\n      okText: \"确定\",\r\n      okType: \"danger\",\r\n      cancelText: \"取消\",\r\n      onOk() {\r\n        //删除本地存储\r\n        //storageUtils.removeUser();\r\n        //删除内存中用户信息\r\n        // memoryUtils.user = {};\r\n        // this.props.user = {};\r\n        _this.props.loginOut();\r\n        //_this.props.history.replace(\"/login\");\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //获取title\r\n    //const title = this.getTitle();\r\n    const title = this.props.headerTitle;\r\n    const { currentTime, weather, dayPictureUrl } = this.state;\r\n    //const { username } = memoryUtils.user;\r\n    const { username } = this.props.user;\r\n\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎,{username}</span>\r\n          {/* <a href=\"h\" onClick={} className=\"exit\">\r\n            退出\r\n          </a> */}\r\n          <LinkButton onClick={this.loginOut}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span className=\"time\">{currentTime}</span>\r\n            <img className=\"imgs\" src={dayPictureUrl} alt=\"img\" />\r\n            <span className=\"desc\">{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    headerTitle: state.headerTitle,\r\n    user: state.user,\r\n  }),\r\n  { loginOut }\r\n)(withRouter(Header));\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport img from \"../../assets/images/logo.png\";\r\n\r\nimport \"./index.less\";\r\n\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nimport { Menu, Icon } from \"antd\";\r\n\r\n//import memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { set_header_title } from \"../../redux/createActions\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n  //判断是否有权限的函数\r\n  hasAuth = (item) => {\r\n    //console.log(item);\r\n    const { key, isPublic } = item;\r\n    // const username = memoryUtils.user.username;\r\n    //  console.log(username);\r\n    // const menus = memoryUtils.user.role.menus;\r\n\r\n    const username = this.props.user.username;\r\n\r\n    const menus = this.props.user.role.menus;\r\n    //如果用户名为 admin 或者 用户权限中包含了 isPublic字段 或者权限中包含了key\r\n    if (username === \"admin\" || isPublic || menus.includes(key)) {\r\n      return true;\r\n    } else if (item.children) {\r\n      //如果item中存在children字段\r\n      return !!item.children.find((cItem) => menus.includes(cItem.key));\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //动态生成menu函数\r\n  getMenuList = (menuList) => {\r\n    const { pathname } = this.props.history.location;\r\n    //遍历数组 mentList [{},{}]\r\n    return menuList.map((item) => {\r\n      //判断是否有权限\r\n      if (this.hasAuth(item)) {\r\n        if (!item.children) {\r\n          if (item.key === pathname || pathname.startsWith(item.key)) {\r\n            this.props.set_header_title(item.title);\r\n          }\r\n          return (\r\n            <Menu.Item key={item.key}>\r\n              <Link\r\n                to={item.key}\r\n                onClick={() => this.props.set_header_title(item.title)}\r\n              >\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          const childrenItem = item.children.find((childrenItem) =>\r\n            pathname.startsWith(childrenItem.key)\r\n          );\r\n          if (childrenItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          return (\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuList(item.children)}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  //在render之前执行(同步任务)\r\n  UNSAFE_componentWillMount() {\r\n    this.menuList = this.getMenuList(menuList);\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props);\r\n    let { pathname } = this.props.history.location;\r\n    if (pathname.startsWith(\"/product\")) {\r\n      //判断路由路径是否以/product开头\r\n      pathname = \"/product\";\r\n    }\r\n    //  console.log(\"render()\", pathname);\r\n    const openKey = this.openKey;\r\n    return (\r\n      <Fragment>\r\n        <Link to=\"/\" className=\"left-nav\">\r\n          <img src={img} alt=\"\" />\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n        <div style={{ width: \"100%\" }}>\r\n          <Menu\r\n            selectedKeys={[pathname]}\r\n            defaultOpenKeys={[openKey]}\r\n            mode=\"inline\"\r\n            theme=\"dark\"\r\n          >\r\n            {/* 动态生成结构 */}\r\n            {this.menuList}\r\n          </Menu>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    user: state.user,\r\n  }),\r\n  { set_header_title }\r\n)(withRouter(LeftNav));\r\n","import React, { Component } from \"react\";\r\nimport \"./index.less\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <div className=\"home\">欢迎来到硅谷后台管理系统</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\nclass AddCategory extends Component {\r\n  static propTypes = {\r\n    categorys: PropTypes.array.isRequired,\r\n    parentId: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { categorys, parentId } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"parentId\", {\r\n            initialValue: parentId,\r\n          })(\r\n            <Select>\r\n              <Select.Option value=\"0\">一级分类</Select.Option>\r\n              {categorys.map((item) => (\r\n                <Select.Option key={item._id} value={item._id}>\r\n                  {item.name}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"请输入要添加的内容\" }],\r\n          })(<Input placeholder=\"请输入分类名称\" />)}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAddCategory = Form.create()(AddCategory);\r\nexport default WrappedAddCategory;\r\n","import React, { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Form, Input } from \"antd\";\r\nclass UpdateCategory extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  //调用传递过来的setForm函数向父组件传递form对象\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { categoryName } = this.props;\r\n    return (\r\n      <Form>\r\n        <Form.Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: categoryName,\r\n            rules: [{ required: true, message: \"请输入要添加的内容\" }],\r\n          })(<Input placeholder=\"请输入分类名称\" />)}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedUpdateCategory = Form.create()(UpdateCategory);\r\nexport default WrappedUpdateCategory;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Card, Button, Icon, Table, message, Modal } from \"antd\";\r\nimport {\r\n  reqCategorys,\r\n  reqAddCategory,\r\n  reqUpdateCategory,\r\n} from \"../../api/index\";\r\n\r\nimport LinkButton from \"../../components/linkButton/LinkButton\";\r\n\r\nimport AddCategory from \"./addCategory/addCategorys\";\r\n\r\nimport UpdateCategory from \"./updateCategory/updateCategory\";\r\n\r\nexport default class Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categorys: [], //一级分类列表\r\n      subCategorys: [], //二级分类列表\r\n      loading: false,\r\n      parentId: \"0\",\r\n      parentName: \"\",\r\n      showStatus: 0, //0都不显示 1显示添加 2显示更新\r\n    };\r\n  }\r\n\r\n  //获取二级分类列表数据\r\n  getSubCategorys = (category) => {\r\n    //console.log(category);\r\n    //获取二级分类列表\r\n    this.setState(\r\n      {\r\n        parentId: category._id,\r\n        parentName: category.name,\r\n      },\r\n      () => {\r\n        this.getCategorys();\r\n      }\r\n    );\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"分类的名称\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        width: 300,\r\n        render: (category) => {\r\n          const { parentId } = this.state;\r\n          return (\r\n            <span>\r\n              <LinkButton onClick={() => this.showUpdateCategory(category)}>\r\n                修改分类\r\n              </LinkButton>\r\n              {parentId === \"0\" ? (\r\n                <LinkButton onClick={() => this.getSubCategorys(category)}>\r\n                  查看子分类\r\n                </LinkButton>\r\n              ) : null}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  };\r\n\r\n  //为第一次render准备数据\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  //发送ajax请求处理异步任务\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  getCategorys = async (parentId) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    parentId = parentId || this.state.parentId;\r\n    const result = await reqCategorys(parentId);\r\n    if (result.status === 0) {\r\n      //可能是一级的，也可能是二级的\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        //更新数据\r\n        this.setState({\r\n          categorys,\r\n          loading: false,\r\n        });\r\n      } else {\r\n        //更新数据\r\n        this.setState({\r\n          subCategorys: categorys, //更新二级列表数据\r\n          loading: false,\r\n        });\r\n      }\r\n    } else {\r\n      message.error(\"请求数据出错\");\r\n    }\r\n  };\r\n\r\n  //更新显示为一级菜单项\r\n  showFirstCategory = () => {\r\n    //更新数据\r\n    this.setState({\r\n      parentId: \"0\",\r\n      parentName: \"\",\r\n      subCategorys: [],\r\n    });\r\n  };\r\n\r\n  //显示更新的modal\r\n  showUpdateCategory = (category) => {\r\n    //保存数据\r\n    this.category = category;\r\n    //更新数据\r\n    this.setState({\r\n      showStatus: 2,\r\n    });\r\n  };\r\n\r\n  //点击更新\r\n  updateCategory = () => {\r\n    //console.log(this.form);\r\n    this.form.validateFields(async (err, values) => {\r\n      //如果没有错误\r\n      if (!err) {\r\n        const categoryId = this.category._id;\r\n        const { categoryName } = values;\r\n        //发送更新的ajax请求\r\n        const result = await reqUpdateCategory({ categoryId, categoryName });\r\n        // console.log(result);\r\n        if (result.status === 0) {\r\n          //重新获取数据\r\n          this.getCategorys();\r\n        } else {\r\n          message.error(\"获取数据出错\");\r\n        }\r\n        //隐藏modal\r\n        this.handleCancel();\r\n      }\r\n    });\r\n  };\r\n\r\n  //显示添加的modal\r\n  showAddCategory = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n\r\n  //点击添加\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      //如果没有出现错误\r\n      if (!err) {\r\n        //获取数据\r\n        const { parentId, categoryName } = values;\r\n        //发送添加的ajax请求\r\n        const result = await reqAddCategory({ parentId, categoryName });\r\n        if (result.status === 0) {\r\n          //添加的分类就是当前列表下的分类\r\n          //重新获取数据\r\n          this.getCategorys();\r\n        } else if (parentId === \"0\") {\r\n          //如果在二级菜单添加一级数据 需要重新获取一下一级数据\r\n          this.getCategorys(\"0\");\r\n        } else {\r\n          message.error(\"获取数据失败了。\");\r\n        }\r\n        this.handleCancel();\r\n      }\r\n    });\r\n  };\r\n\r\n  //隐藏模态框(modal)\r\n  handleCancel = () => {\r\n    //清除文本框缓存\r\n    this.form.resetFields();\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      categorys,\r\n      loading,\r\n      parentId,\r\n      subCategorys,\r\n      parentName,\r\n      showStatus,\r\n    } = this.state;\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        \"一级菜单列表\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showFirstCategory}>一级菜单列表</LinkButton>\r\n          <Icon type=\"arrow-right\" style={{ marginRight: 5 }}></Icon>\r\n          {parentName}\r\n        </span>\r\n      );\r\n    const extra = (\r\n      <Button onClick={this.showAddCategory} type=\"primary\">\r\n        <Icon type=\"plus\"></Icon>\r\n        添加\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Card title={title} extra={extra}>\r\n          <Table\r\n            bordered\r\n            rowKey=\"_id\"\r\n            dataSource={parentId === \"0\" ? categorys : subCategorys}\r\n            columns={this.columns}\r\n            loading={loading}\r\n            pagination={{\r\n              defaultPageSize: 3,\r\n              showQuickJumper: true,\r\n            }}\r\n          />\r\n          <Modal\r\n            title=\"添加数据\"\r\n            visible={showStatus === 1}\r\n            onOk={this.addCategory}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <AddCategory\r\n              categorys={categorys}\r\n              parentId={parentId}\r\n              setForm={(form) => {\r\n                this.form = form;\r\n              }}\r\n            />\r\n          </Modal>\r\n          <Modal\r\n            title=\"更新数据\"\r\n            visible={showStatus === 2}\r\n            onOk={this.updateCategory}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <UpdateCategory\r\n              categoryName={this.category ? this.category.name : \"\"}\r\n              setForm={(form) => {\r\n                this.form = form;\r\n              }}\r\n            />\r\n          </Modal>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Card, Select, Input, Button, Icon, Table, message } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/linkButton/LinkButton\";\r\n\r\nimport {\r\n  reqProducts,\r\n  reqSearchProducts,\r\n  reqUpdateCategoryStatus,\r\n} from \"../../api/index\";\r\n\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\n\r\nexport default class ProductHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [], //商品数据\r\n      total: 0, //商品总数量\r\n      loading: false, //控制loading的显示\r\n      searchName: \"\", //搜索的名称\r\n      searchType: \"productName\", //根据什么字段进行搜索 (默认为productName) productName/productDesc\r\n    };\r\n  }\r\n\r\n  //更新商品的状态\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateCategoryStatus(productId, status);\r\n    if (result.status === 0) {\r\n      message.success(\"更新商品状态成功!\");\r\n    }\r\n    this.getProducts(this.pageNum);\r\n  };\r\n\r\n  //初始化列\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"商品名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"商品描述\",\r\n        dataIndex: \"desc\",\r\n      },\r\n      {\r\n        title: \"价格\",\r\n        dataIndex: \"price\",\r\n        render: (price) => \"¥\" + price, //当前指定了对应的属性值，传入的是对应的属性值\r\n      },\r\n      {\r\n        title: \"状态\",\r\n        render: (product) => {\r\n          const { _id, status } = product;\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.updateStatus(_id, status === 1 ? 2 : 1)}\r\n                style={{ marginTop: \"10px\" }}\r\n              >\r\n                {status === 1 ? \"下架\" : \"上架\"}\r\n              </Button>\r\n              <p style={{ textAlign: \"center\", marginTop: \"10px\" }}>\r\n                {status === 1 ? \"在售\" : \"已下架\"}\r\n              </p>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: (product) => {\r\n          // console.log(product);\r\n          return (\r\n            <span>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  this.props.history.push(\"/product/detail\", { product })\r\n                }\r\n              >\r\n                详情\r\n              </LinkButton>\r\n              <LinkButton\r\n                onClick={() =>\r\n                  this.props.history.push(\"/product/addproduct\", product)\r\n                }\r\n              >\r\n                修改\r\n              </LinkButton>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  //获取商品数据\r\n  getProducts = async (pageNum = 1, pageSize = PAGE_SIZE) => {\r\n    this.pageNum = pageNum;\r\n    //显示loading\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    const { searchType, searchName } = this.state;\r\n    let result;\r\n    //根据关键字进行搜索\r\n    if (searchName) {\r\n      result = await reqSearchProducts({\r\n        pageNum,\r\n        pageSize,\r\n        searchName,\r\n        searchType,\r\n      });\r\n    } else {\r\n      result = await reqProducts(pageNum, pageSize);\r\n    }\r\n    //显示loading\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n    //请求数据成功\r\n    if (result.status === 0) {\r\n      // console.log(result);\r\n      const { list, total } = result.data;\r\n\r\n      //更新状态\r\n      this.setState({\r\n        products: list,\r\n        total,\r\n      });\r\n    } else {\r\n      //请求数据失败\r\n      message.error(\"获取数据出错了。\");\r\n    }\r\n  };\r\n\r\n  //发送ajax请求获取商品数据\r\n  componentDidMount() {\r\n    this.getProducts();\r\n  }\r\n\r\n  render() {\r\n    const { products, total, loading, searchName, searchType } = this.state;\r\n    const Option = Select.Option;\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value={searchType}\r\n          onChange={(value) => this.setState({ searchType: value })}\r\n        >\r\n          <Option value=\"productName\">按名称搜索</Option>\r\n          <Option value=\"productDesc\">按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          value={searchName}\r\n          placeholder=\"关键字\"\r\n          style={{ width: 150, margin: \"0 10px\" }}\r\n          onChange={(e) => {\r\n            this.setState({ searchName: e.currentTarget.value });\r\n          }}\r\n        />\r\n        <Button type=\"primary\" onClick={() => this.getProducts()}>\r\n          搜索\r\n        </Button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.props.history.push(\"/product/addproduct\")}\r\n        >\r\n          <Icon type=\"plus\" />\r\n          添加商品\r\n        </Button>\r\n      </span>\r\n    );\r\n    return (\r\n      <div>\r\n        <Card title={title} extra={extra}>\r\n          <Table\r\n            loading={loading}\r\n            bordered\r\n            dataSource={products}\r\n            columns={this.columns}\r\n            rowKey=\"_id\"\r\n            pagination={{\r\n              current: this.pageNum,\r\n              defaultPageSize: PAGE_SIZE,\r\n              showQuickJumper: true,\r\n              total,\r\n              onChange: this.getProducts,\r\n            }}\r\n          />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//显示几条数据\r\nexport const PAGE_SIZE = 3;\r\n\r\nexport const BASE_IMG_URL = \"http://localhost:5000/upload/\";\r\n","import React, { Component } from \"react\";\r\n\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\n\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\n\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nimport htmlToDraft from \"html-to-draftjs\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\n//上传图片的函数\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"/manage/img/upload\");\r\n    // xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      const { url } = response.data;\r\n      resolve({ data: { link: url } });\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail;\r\n    //如果有值,则创建\r\n    if (html) {\r\n      const contentBlock = htmlToDraft(html);\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(\r\n          contentBlock.contentBlocks\r\n        );\r\n        const editorState = EditorState.createWithContent(contentState);\r\n        this.state = {\r\n          editorState,\r\n        };\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(),\r\n      };\r\n    }\r\n  }\r\n\r\n  //获取用户输入的内容\r\n  getDetail = () => {\r\n    let { editorState } = this.state;\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: \"2px solid black\",\r\n          paddingLeft: 10,\r\n          minHeight: 200,\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          inline: { inDropdown: true },\r\n          list: { inDropdown: true },\r\n          textAlign: { inDropdown: true },\r\n          link: { inDropdown: true },\r\n          history: { inDropdown: true },\r\n          image: {\r\n            uploadCallback: uploadImageCallBack,\r\n            alt: { present: true, mandatory: true },\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Upload, Icon, Modal, message } from \"antd\";\r\nimport { reqDeleteImg } from \"../../api/index\";\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nclass PicturesWall extends React.Component {\r\n  //声明接受数据的类型\r\n  static propTypes = {\r\n    imgs: PropTypes.array,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    let fileList = [];\r\n    let imgs = this.props.imgs;\r\n    //  console.log(imgs);\r\n    if (imgs && imgs.length > 0) {\r\n      //进行赋值\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: \"done\",\r\n        url: BASE_IMG_URL + img,\r\n      }));\r\n    }\r\n\r\n    this.state = {\r\n      previewVisible: false,\r\n      previewImage: \"\",\r\n      fileList, //所有已上传图片的数组\r\n    };\r\n  }\r\n\r\n  //获取上传的图片name []\r\n  getImgs = () => this.state.fileList.map((img) => img.name);\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  handleChange = async ({ fileList, file }) => {\r\n    //console.log(fileList, file);\r\n    //上传成功\r\n    if (file.status === \"done\") {\r\n      message.success(\"上传图片成功！\");\r\n      const result = file.response;\r\n      if (result.status === 0) {\r\n        let { name, url } = result.data;\r\n        file = fileList[fileList.length - 1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error(\"上传图片失败！\");\r\n      }\r\n    } else if (file.status === \"removed\") {\r\n      const result = await reqDeleteImg(file.name);\r\n      if (result.status === 0) {\r\n        message.success(\"删除图片成功！\");\r\n      } else {\r\n        message.error(\"删除图片失败\");\r\n      }\r\n    }\r\n    //更新状态\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div className=\"ant-upload-text\">Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"clearfix\">\r\n        <Upload\r\n          action=\"/manage/img/upload\" //上传图片的接口地址\r\n          listType=\"picture-card\" //展示的演示\r\n          accept=\"image/*\" //只接受图片类型\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n          name=\"image\" //发送请求的参数名\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PicturesWall;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Card, Input, Form, Button, Icon, Cascader, message } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/linkButton/LinkButton\";\r\n\r\nimport { reqCategorys, reqAddOrUpdateProduct } from \"../../api/index\";\r\n\r\nimport RichTextEditor from \"./RichTextEditor\";\r\n\r\nimport PhotoWall from \"./photoWall\";\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\nclass AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //创建容器\r\n    this.photoWall = React.createRef();\r\n    this.detail = React.createRef();\r\n  }\r\n  // 定义组件的状态\r\n  state = {\r\n    options: [],\r\n  };\r\n\r\n  loadData = async (selectedOptions) => {\r\n    const targetOption = selectedOptions[selectedOptions.length - 1];\r\n    // console.log(typeof selectedOptions[selectedOptions.length - 1]);\r\n    //显示loading\r\n    targetOption.loading = true;\r\n    //获取二级分类\r\n    const subCategorys = await this.getCategorys(targetOption.value);\r\n    //隐藏loading\r\n    targetOption.loading = false;\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      //生成一个二级列表的options\r\n      const subOptions = subCategorys.map((childItem) => ({\r\n        value: childItem._id,\r\n        label: childItem.name,\r\n        isLeaf: true,\r\n      }));\r\n      targetOption.children = subOptions;\r\n    } else {\r\n      //没有二级列表\r\n      targetOption.isLeaf = true;\r\n    }\r\n    //更新数据\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    });\r\n  };\r\n\r\n  //验证价格输入是否正确\r\n  validatorPrice = (rule, value, callback) => {\r\n    if (+value > 0) {\r\n      callback(); //输入正确\r\n    } else {\r\n      callback(\"价格必须大于0\"); //验证不通过\r\n    }\r\n  };\r\n\r\n  //submitHandler 添加商品\r\n  submitHandler = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      //没有错误，验证成功\r\n      if (!err) {\r\n        const imgs = this.photoWall.current.getImgs();\r\n        let detail = this.detail.current.getDetail();\r\n        let { categorys, desc, name, price } = values;\r\n        let pCategoryId, categoryId;\r\n        //一级菜单下\r\n        if (categorys.length === 1) {\r\n          //父分类Id\r\n          pCategoryId = \"0\";\r\n          //一级菜单下的分类Id\r\n          categoryId = categorys[0];\r\n        } else {\r\n          //父分类Id\r\n          pCategoryId = categorys[0];\r\n          // 子分类Id\r\n          categoryId = categorys[1];\r\n        }\r\n        const product = {\r\n          categoryId,\r\n          pCategoryId,\r\n          name,\r\n          desc,\r\n          price,\r\n          detail,\r\n          imgs,\r\n        };\r\n\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        //发送ajax请求\r\n        const result = await reqAddOrUpdateProduct(product);\r\n        if (result.status === 0) {\r\n          message.success(`${this.isUpdate ? \"修改\" : \"添加\"}商品成功！`);\r\n          //跳转路由\r\n          this.props.history.goBack();\r\n        } else {\r\n          message.error(`${this.isUpdate ? \"修改\" : \"添加\"}商品失败！`);\r\n        }\r\n        /*\r\n     categoryId    |Y       |string   |分类ID\r\n    |pCategoryId   |Y       |string   |父分类ID\r\n    |name          |Y       |string   |商品名称\r\n    |desc          |N       |string   |商品描述\r\n    |price         |N       |string   |商品价格\r\n    |detail        |N       |string   |商品详情\r\n    |imgs          |N       |array   |商品图片名数组\r\n */\r\n      }\r\n    });\r\n  };\r\n  getInitOptions = async (categorys) => {\r\n    //遍历categorys []\r\n    const newCategorys = categorys.map((item) => ({\r\n      value: item._id,\r\n      label: item.name,\r\n      isLeaf: false,\r\n    }));\r\n    //如果是一个二级商品分类\r\n    let { isUpdate, product } = this;\r\n    //categoryId\r\n    const { pCategoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      //获取二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      //生成二级菜单列表下的options\r\n      const childrenOptions = subCategorys.map((cItem) => ({\r\n        value: cItem._id,\r\n        label: cItem.name,\r\n        isLeaf: true,\r\n      }));\r\n      //找到当前商品对应的一级option对象\r\n      const targetOption = newCategorys.find(\r\n        (option) => option.value === pCategoryId\r\n      );\r\n      //关联对应的option\r\n      targetOption.children = childrenOptions;\r\n    }\r\n\r\n    //更新数据 options\r\n    this.setState({\r\n      options: newCategorys,\r\n    });\r\n  };\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId);\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        //一级分类列表的数据\r\n        this.getInitOptions(categorys);\r\n      } else {\r\n        //二级分类列表\r\n        return categorys;\r\n      }\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    //如果有值则为修改商品，否则为添加商品\r\n    let product = this.props.location.state;\r\n    //判断是否为更新标识\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n\r\n  render() {\r\n    const isUpdate = this.isUpdate;\r\n    let product = this.product;\r\n    let { categoryId, pCategoryId } = product;\r\n    let categorys = [];\r\n    if (isUpdate) {\r\n      //一级分类的Id\r\n      if (pCategoryId === \"0\") {\r\n        categorys.push(pCategoryId);\r\n      } else {\r\n        // 二级分类的Id\r\n        categorys.push(pCategoryId);\r\n        categorys.push(categoryId);\r\n      }\r\n    }\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type=\"arrow-left\" style={{ marginRight: 10 }} />\r\n          <span>{isUpdate ? \"修改商品\" : \"添加商品\"}</span>\r\n        </LinkButton>\r\n      </span>\r\n    );\r\n\r\n    const formItemLayout = {\r\n      labelCol: { span: 3 },\r\n      wrapperCol: { span: 8 },\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {getFieldDecorator(\"name\", {\r\n              rules: [{ required: true, message: \"必须输入商品名称\" }],\r\n              initialValue: product.name,\r\n            })(<Input placeholder=\"请输入商品名称\" />)}\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {getFieldDecorator(\"desc\", {\r\n              rules: [{ required: true, message: \"必须输入商品描述\" }],\r\n              initialValue: product.desc,\r\n            })(\r\n              <TextArea\r\n                placeholder=\"请输入商品描述\"\r\n                autosize={{ minRows: 2, maxRows: 10 }}\r\n              ></TextArea>\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n            {getFieldDecorator(\"price\", {\r\n              rules: [\r\n                { required: true, message: \"必须输入商品价格\" },\r\n                {\r\n                  validator: this.validatorPrice,\r\n                },\r\n              ],\r\n              initialValue: product.price,\r\n            })(\r\n              <Input\r\n                placeholder=\"请输入商品价格\"\r\n                type=\"number\"\r\n                addonAfter=\"元\"\r\n              ></Input>\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {getFieldDecorator(\"categorys\", {\r\n              rules: [{ required: true, message: \"必须选择商品分类\" }],\r\n              initialValue: categorys,\r\n            })(\r\n              <Cascader options={this.state.options} loadData={this.loadData} />\r\n            )}\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PhotoWall ref={this.photoWall} imgs={product.imgs} />\r\n          </Item>\r\n\r\n          <Item\r\n            label=\"商品详情\"\r\n            labelCol={{ span: 3 }}\r\n            wrapperCol={{ span: 18 }}\r\n          >\r\n            <RichTextEditor ref={this.detail} detail={product.detail} />\r\n          </Item>\r\n        </Form>\r\n        <Button type=\"primary\" onClick={this.submitHandler}>\r\n          提交\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(AddProduct);\r\n","import React, { Component } from \"react\";\r\n\r\nimport LinkButton from \"../../components/linkButton/LinkButton\";\r\n\r\nimport { Card, List, Icon } from \"antd\";\r\n\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\n\r\nimport { reqCategory } from \"../../api/index\";\r\n\r\nexport default class Detail extends Component {\r\n  state = {\r\n    cNameOne: \"\", //一级分类列表\r\n    cNameTwo: \"\", //二级分类列表\r\n  };\r\n\r\n  async UNSAFE_componentWillMount() {\r\n    const { pCategoryId, categoryId } = this.props.location.state.product;\r\n\r\n    //发送ajax请求\r\n    if (pCategoryId === \"0\") {\r\n      const result = await reqCategory(categoryId); //一级分类\r\n      let cNameOne = result.data.name;\r\n      if (result.status === 0) {\r\n        this.setState({\r\n          cNameOne,\r\n        });\r\n      }\r\n    } else {\r\n      //二级分类\r\n      const results = await Promise.all([\r\n        reqCategory(pCategoryId),\r\n        reqCategory(categoryId),\r\n      ]);\r\n      let cNameOne = results[0].data.name;\r\n      let cNameTwo = results[1].data.name;\r\n      //更新状态\r\n      this.setState({ cNameOne, cNameTwo });\r\n    }\r\n  }\r\n  render() {\r\n    const { product } = this.props.location.state;\r\n    // console.log(product);\r\n    //解构赋值\r\n    let { name, imgs, price, desc, detail } = product;\r\n    const Item = List.Item;\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon style={{ marginRight: 10 }} type=\"arrow-left\" />\r\n        </LinkButton>\r\n        商品详情\r\n      </span>\r\n    );\r\n    const { cNameOne, cNameTwo } = this.state;\r\n    return (\r\n      <Card title={title} className=\"detail\">\r\n        <List>\r\n          <Item>\r\n            <span className=\"title\">商品名称:</span>\r\n            <span className=\"content\">{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品描述:</span>\r\n            <span className=\"content\">{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品价格:</span>\r\n            <span className=\"content\">{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">所属分类:</span>\r\n            <span className=\"content\">\r\n              {cNameOne} {cNameTwo ? \" --> \" + cNameTwo : null}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品图片</span>\r\n            <span className=\"content\">\r\n              {imgs.map((imgItem) => (\r\n                <img key={imgItem} src={BASE_IMG_URL + imgItem} alt=\"\" />\r\n              ))}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"title\">商品详情:</span>\r\n            <span\r\n              dangerouslySetInnerHTML={{ __html: detail }}\r\n              className=\"content\"\r\n            ></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ProductHome from \"./productHome\";\r\nimport AddUpdateProduct from \"./add-update\";\r\nimport Detail from \"./detail\";\r\nimport \"./product.less\";\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/product\" exact component={ProductHome} />\r\n          <Route path=\"/product/addproduct\" component={AddUpdateProduct} />\r\n          <Route path=\"/product/detail\" component={Detail} />\r\n          <Redirect to=\"/product\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\nclass AddRole extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item label=\"角色名称\">\r\n          {getFieldDecorator(\"roleName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"角色名称必须输入\" }],\r\n          })(<Input placeholder=\"请输入角色名称\" />)}\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAddCategory = Form.create()(AddRole);\r\nexport default WrappedAddCategory;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Tree } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport menuList from \"../../config/menuConfig\";\r\nconst { TreeNode } = Tree;\r\nexport default class AddAuth extends Component {\r\n  //生命接受值所属类型\r\n  static propTypes = {\r\n    role: PropTypes.object,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    const { menus } = this.props.role;\r\n    this.state = {\r\n      checkedKeys: menus || [],\r\n    };\r\n  }\r\n\r\n  //组件接受到新的props时调用\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    let menus = nextProps.role.menus;\r\n    //更新数据\r\n    this.setState({\r\n      checkedKeys: menus,\r\n    });\r\n  }\r\n\r\n  getAuthMenu = () => [...this.state.checkedKeys];\r\n  //选择tree中某一个node时触发的回调\r\n  onCheck = (checkedKeys) => {\r\n    // console.log(\"onCheck\", checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  initTree = (menuList) => {\r\n    return menuList.reduce((prev, item) => {\r\n      prev.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.initTree(item.children) : null}\r\n        </TreeNode>\r\n      );\r\n      return prev;\r\n    }, []);\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.getTreeNode = this.initTree(menuList);\r\n  }\r\n  render() {\r\n    const { role } = this.props;\r\n    const { checkedKeys } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item label=\"角色名称\">\r\n          <Input value={role.name} disabled />\r\n          <Tree\r\n            checkable\r\n            defaultExpandAll\r\n            checkedKeys={checkedKeys}\r\n            onCheck={this.onCheck}\r\n          >\r\n            <TreeNode title=\"平台权限\" key=\"all\">\r\n              {this.getTreeNode}\r\n            </TreeNode>\r\n          </Tree>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\n\r\nimport { Table, Button, Card, Modal, message } from \"antd\";\r\n\r\nimport AddRole from \"./addRole\";\r\n\r\nimport AddAuth from \"./addAuth\";\r\n\r\nimport { reqGetRoles, reqAddRole, reqUpdateRole } from \"../../api/index\";\r\n\r\nimport dateFormate from \"../../filters/dateFormate\";\r\n\r\n// import memoryUtils from \"../../utils/memoryUtils\";\r\n\r\n// import storageUtils from \"../../utils/storageUtils\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { loginOut } from \"../../redux/createActions\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      roles: [], //所有角色的列表\r\n      role: {}, //选中的列表\r\n      showAdd: false, //控制添加角色modal显示与隐藏\r\n      showAuth: false, //控制添加权限modal显示与隐藏\r\n    };\r\n\r\n    this.authMenu = React.createRef();\r\n  }\r\n  getRoles = async () => {\r\n    const result = await reqGetRoles();\r\n    //获取数据成功\r\n    if (result.status === 0) {\r\n      //  更新状态\r\n      const { data } = result;\r\n      //console.log(data);\r\n      this.setState({\r\n        roles: data,\r\n      });\r\n    }\r\n  };\r\n\r\n  //发送ajax请求，获取角色列表信息\r\n  componentDidMount() {\r\n    this.getRoles();\r\n  }\r\n\r\n  getColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"角色名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        render: dateFormate,\r\n      },\r\n      {\r\n        title: \"授权时间\",\r\n        dataIndex: \"auth_time\",\r\n        render: dateFormate,\r\n      },\r\n      {\r\n        title: \"授权人\",\r\n        dataIndex: \"auth_name\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  //添加角色名称\r\n  addRole = () => {\r\n    //进行表单验证\r\n    //console.log(this.form);\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        const { roleName } = values;\r\n        //清除缓存\r\n        this.form.resetFields();\r\n        //发送ajax请求\r\n        const result = await reqAddRole(roleName);\r\n        //  console.log(result);\r\n        //添加成功\r\n        if (result.status === 0) {\r\n          message.success(\"添加角色成功\");\r\n          const role = result.data;\r\n          const roles = [...this.state.roles];\r\n          roles.push(role);\r\n          // console.log(roles);\r\n          //隐藏modal并更新roles\r\n          this.setState({\r\n            showAdd: false,\r\n            roles,\r\n          });\r\n        } else {\r\n          message.error(\"添加角色失败\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  //添加角色权限\r\n  updateAuth = async () => {\r\n    //调用子组件中的方法得到 authMenu []\r\n    const getAuthMenu = this.authMenu.current.getAuthMenu();\r\n    //console.log(getAuthMenu);\r\n    const { role } = this.state;\r\n    role.menus = getAuthMenu;\r\n    role.auth_name = this.props.user.username;\r\n    role.auth_time = Date.now(); //获取当前时间的时间戳\r\n    //console.log(role);\r\n    //发送ajax请求更新后端数据\r\n    const result = await reqUpdateRole(role);\r\n    //更新成功\r\n    if (result.status === 0) {\r\n      //console.log(memoryUtils.user.role_id);\r\n      if (role._id === this.props.user.role_id) {\r\n        //清除内存中的数据\r\n        // memoryUtils.user = {};\r\n        //清除本地缓存的数据\r\n        // storageUtils.removeUser();\r\n        //跳转到登录接秒\r\n        //this.props.history.replace(\"/login\");\r\n        this.props.loginOut();\r\n        message.success(\"当前用户权限更新成功，请重新登陆\");\r\n      } else {\r\n        //从后端获取更新后的数据 如果更新的不是自身的权限\r\n        this.getRoles();\r\n        message.success(\"权限更新成功\");\r\n      }\r\n    } else {\r\n      message.error(\"权限更新失败\");\r\n    }\r\n    //隐藏modal\r\n    this.setState({ showAuth: false });\r\n  };\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      // 点击行\r\n      onClick: (event) => {\r\n        //更新状态\r\n        this.setState({\r\n          role,\r\n        });\r\n      },\r\n    };\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.getColumns();\r\n  }\r\n  render() {\r\n    const { roles, role, showAdd, showAuth } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.setState({ showAdd: true })}\r\n          style={{ marginRight: 15 }}\r\n        >\r\n          创建角色\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() =>\r\n            this.setState({\r\n              showAuth: true,\r\n            })\r\n          }\r\n          type=\"primary\"\r\n          disabled={!role._id}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{\r\n            defaultPageSize: PAGE_SIZE,\r\n          }}\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => this.setState({ role }),\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={showAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => this.setState({ showAdd: false })}\r\n        >\r\n          <AddRole\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={showAuth}\r\n          onOk={this.updateAuth}\r\n          onCancel={() => this.setState({ showAuth: false })}\r\n        >\r\n          <AddAuth ref={this.authMenu} role={role} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    user: state.user,\r\n  }),\r\n  { loginOut }\r\n)(Role);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Select } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\nclass AddUser extends PureComponent {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired,\r\n    roles: PropTypes.array,\r\n    user: PropTypes.object,\r\n  };\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    const { roles, user } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label=\"用户名\">\r\n          {getFieldDecorator(\"username\", {\r\n            initialValue: user.username,\r\n            rules: [{ required: true, message: \"用户名称必须输入\" }],\r\n          })(<Input placeholder=\"请输入用户名称\" />)}\r\n        </Item>\r\n        {user._id ? null : (\r\n          <Item label=\"密码\">\r\n            {getFieldDecorator(\"password\", {\r\n              initialValue: user.password,\r\n              rules: [{ required: true, message: \"必须输入密码\" }],\r\n            })(<Input type=\"password\" placeholder=\"请输入密码\" />)}\r\n          </Item>\r\n        )}\r\n        <Item label=\"电话号码\">\r\n          {getFieldDecorator(\"phone\", {\r\n            initialValue: user.phone,\r\n            rules: [{ required: true, message: \"必须输入电话号码\" }],\r\n          })(<Input placeholder=\"请输入电话号码\" />)}\r\n        </Item>\r\n        <Item label=\"邮箱\">\r\n          {getFieldDecorator(\"email\", {\r\n            initialValue: user.email,\r\n            rules: [{ required: true, message: \"邮箱必须输入\" }],\r\n          })(<Input placeholder=\"请输入邮箱\" />)}\r\n        </Item>\r\n        <Item label=\"角色\">\r\n          {getFieldDecorator(\"role_id\", {\r\n            initialValue: user.role_id,\r\n            rules: [{ required: true, message: \"请选择角色\" }],\r\n          })(\r\n            <Select>\r\n              {roles.map((role) => (\r\n                <Option value={role._id} key={role._id}>\r\n                  {role.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAddCategory = Form.create()(AddUser);\r\nexport default WrappedAddCategory;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Card, Table, Button, Modal, message } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/linkButton/LinkButton\";\r\n\r\nimport {\r\n  reqGetUsers,\r\n  reqDeltetUser,\r\n  reqAddOrUpdateUser,\r\n} from \"../../api/index\";\r\n\r\nimport dateFormate from \"../../filters/dateFormate\";\r\n\r\nimport AddUser from \"./adduser\";\r\n\r\nexport default class User extends Component {\r\n  state = {\r\n    users: [], //所有的用户信息\r\n    roles: [], //角色信息\r\n    isShow: false,\r\n  };\r\n\r\n  //更新/添加用户信息\r\n  addOrUpdateUser = async () => {\r\n    //发送请求添加一个用户\r\n    //后去form表单中的数据\r\n    //console.log(this.form);\r\n    const user = this.form.getFieldsValue();\r\n    //清除表单缓存数据\r\n    this.form.resetFields();\r\n    //console.log(user);\r\n\r\n    //修改\r\n    //console.log(this.user);\r\n    let result;\r\n    if (this.user) {\r\n      user._id = this.user._id;\r\n      result = await reqAddOrUpdateUser(user);\r\n    } else {\r\n      result = await reqAddOrUpdateUser(user);\r\n    }\r\n\r\n    if (result.status === 0) {\r\n      message.success(`${this.user ? \"修改\" : \"添加\"}用户成功`);\r\n      this.setState({\r\n        isShow: false,\r\n      });\r\n      //重新向后端获取数据\r\n      this.getUsers();\r\n    }\r\n  };\r\n\r\n  //删除用户信息\r\n  deltetUser = (user) => {\r\n    //console.log(user);\r\n    Modal.confirm({\r\n      title: `你确定要删除${user.username}吗？`,\r\n      onOk: async () => {\r\n        //发送ajax请求删除用户数据\r\n        const result = await reqDeltetUser(user._id);\r\n        //console.log(result);\r\n        if (result.status === 0) {\r\n          message.success(`删除用户${user.username}成功`);\r\n          //重新获取后端数据\r\n          this.getUsers();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  //更新用户信息\r\n  showUpdate = (user) => {\r\n    //保存用户信息\r\n    this.user = user;\r\n    console.log(this.user);\r\n    this.setState({ isShow: true });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    //清除文本框缓存\r\n    this.form.resetFields();\r\n    this.setState({\r\n      isShow: false,\r\n    });\r\n  };\r\n  getColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"用户名\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"邮箱\",\r\n        dataIndex: \"email\",\r\n      },\r\n      {\r\n        title: \"电话\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: dateFormate,\r\n      },\r\n      {\r\n        title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: (role_id) => {\r\n          // console.log(role_id);\r\n          // const result = this.state.roles.find((role) => role._id === role_id);\r\n          // return result ? result.name : {};\r\n\r\n          // 性能比上一种方法好\r\n          return this.roleNames[role_id];\r\n        },\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deltetUser(user)}>删除</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.getColumns();\r\n  }\r\n\r\n  getRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name;\r\n      return pre;\r\n    }, {});\r\n    //console.log(rolesName);\r\n    this.roleNames = roleNames;\r\n  };\r\n  getUsers = async () => {\r\n    const result = await reqGetUsers();\r\n    //请求数据成功\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data;\r\n      this.getRoleNames(roles);\r\n      //更新状态\r\n      this.setState({\r\n        users,\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  render() {\r\n    const { users, isShow, roles } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            // 清除之前保存的user信息\r\n            this.user = null;\r\n            this.setState({ isShow: true });\r\n          }}\r\n        >\r\n          创建用户\r\n        </Button>\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{\r\n            defaultPageSize: 2,\r\n          }}\r\n        />\r\n        <Modal\r\n          title={this.user ? \"修改数据\" : \"添加数据\"}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddUser\r\n            user={this.user ? this.user : {}}\r\n            roles={roles}\r\n            setForm={(form) => (this.form = form)}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*\r\n后台管理的柱状图路由组件\r\n*/\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40],\r\n  };\r\n  getOption = () => {\r\n    const { sales, inventorys } = this.state;\r\n    return {\r\n      title: {\r\n        text: \"ECharts  入门示例\",\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\" 销量\", \" 库存\"],\r\n      },\r\n      xAxis: {\r\n        data: [\" 衬衫\", \" 羊毛衫\", \" 雪纺衫\", \" 裤子\", \" 高跟鞋\", \" 袜子\"],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \" 销量\",\r\n          type: \"bar\",\r\n          data: sales,\r\n        },\r\n        {\r\n          name: \" 库存\",\r\n          type: \"bar\",\r\n          data: inventorys,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  update = () => {\r\n    const sales = this.state.sales.map((sale) => sale + 1);\r\n    const inventorys = this.state.inventorys.map((inventory) => inventory - 1);\r\n    this.setState({\r\n      sales,\r\n      inventorys,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n        <Card title=\" 柱状图一\">\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*\r\n后台管理的柱状图路由组件\r\n*/\r\nexport default class Line extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20],\r\n    inventorys: [15, 30, 46, 20, 20, 40],\r\n  };\r\n  getOption = () => {\r\n    const { sales, inventorys } = this.state;\r\n    return {\r\n      title: {\r\n        text: \"ECharts  入门示例\",\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\" 销量\", \" 库存\"],\r\n      },\r\n      xAxis: {\r\n        data: [\" 衬衫\", \" 羊毛衫\", \" 雪纺衫\", \" 裤子\", \" 高跟鞋\", \" 袜子\"],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \" 销量\",\r\n          type: \"line\",\r\n          data: sales,\r\n        },\r\n        {\r\n          name: \" 库存\",\r\n          type: \"line\",\r\n          data: inventorys,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  update = () => {\r\n    const sales = this.state.sales.map((sale) => sale + 1);\r\n    const inventorys = this.state.inventorys.map((inventory) => inventory - 1);\r\n    this.setState({\r\n      sales,\r\n      inventorys,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n        <Card title=\"折线图一\">\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n/*\r\n后台管理的饼图路由组件\r\n*/\r\nexport default class Pie extends Component {\r\n  getOption = () => {\r\n    return {\r\n      title: {\r\n        text: \" 某站点用户访问来源\",\r\n        subtext: \" 纯属虚构\",\r\n        x: \"center\",\r\n      },\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n      },\r\n      legend: {\r\n        orient: \"vertical\",\r\n        left: \"left\",\r\n        data: [\" 直接访问\", \" 邮件营销\", \" 联盟广告\", \" 视频广告\", \" 搜索引擎\"],\r\n      },\r\n      series: [\r\n        {\r\n          name: \" 访问来源\",\r\n          type: \"pie\",\r\n          radius: \"55%\",\r\n          center: [\"50%\", \"60%\"],\r\n          data: [\r\n            { value: 335, name: \" 直接访问\" },\r\n            { value: 310, name: \" 邮件营销\" },\r\n            { value: 234, name: \" 联盟广告\" },\r\n            { value: 135, name: \" 视频广告\" },\r\n            { value: 1548, name: \" 搜索引擎\" },\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: \"#2c343c\",\r\n      title: {\r\n        text: \"Customized Pie\",\r\n        left: \"center\",\r\n        top: 20,\r\n        textStyle: {\r\n          color: \"#ccc\",\r\n        },\r\n      },\r\n      tooltip: {\r\n        trigger: \"item\",\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n      },\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1],\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: \"访问来源\",\r\n          type: \"pie\",\r\n          radius: \"55%\",\r\n          center: [\"50%\", \"50%\"],\r\n          data: [\r\n            { value: 335, name: \" 直接访问\" },\r\n            { value: 310, name: \" 邮件营销\" },\r\n            { value: 274, name: \" 联盟广告\" },\r\n            { value: 235, name: \" 视频广告\" },\r\n            { value: 400, name: \" 搜索引擎\" },\r\n          ].sort(function (a, b) {\r\n            return a.value - b.value;\r\n          }),\r\n          roseType: \"radius\",\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: \"rgba(255, 255, 255, 0.3)\",\r\n              },\r\n            },\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: \"rgba(255, 255, 255, 0.3)\",\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20,\r\n            },\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: \"#c23531\",\r\n              shadowBlur: 200,\r\n              shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n            },\r\n          },\r\n          animationType: \"scale\",\r\n          animationEasing: \"elasticOut\",\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"饼图一\">\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title=\"饼图二\">\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Row, Col } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { set_header_title } from \"../../redux/createActions\";\r\nimport \"./index.less\";\r\n/*\r\n前台 404 页面\r\n*/\r\nclass NotFound extends Component {\r\n  goHome = () => {\r\n    this.props.set_header_title(\"首页\");\r\n    this.props.history.replace(\"/home\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Row className=\"not-found\">\r\n        <Col span={12} className=\"left\"></Col>\r\n        <Col span={12} className=\"right\">\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type=\"primary\" onClick={this.goHome}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, { set_header_title })(NotFound);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\n\r\n//import memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Layout } from \"antd\";\r\nimport Header from \"../../components/header/Header\";\r\n\r\nimport LeftNav from \"../../components/left-nav/LeftNav\";\r\n\r\nimport Home from \"../home/Home\";\r\n\r\nimport Category from \"../category/Category\";\r\nimport Product from \"../product/Product\";\r\nimport Role from \"../role/Role\";\r\nimport User from \"../user/User\";\r\nimport Bar from \"../charts/Bar\";\r\nimport Line from \"../charts/Line\";\r\nimport Pie from \"../charts/Pie\";\r\nimport NotFound from \"../notFound/NotFound\";\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\nclass Admin extends Component {\r\n  render() {\r\n    // console.log(\"render()\");\r\n    //console.log(memoryUtils);\r\n    //const { user } = memoryUtils;\r\n\r\n    const { user } = this.props;\r\n\r\n    //读取数据\r\n\r\n    if (!user || !user._id) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Fragment>\r\n        {/* <h1>你好</h1>\r\n        <p>{user.username}</p> */}\r\n        <Layout style={{ minHeight: \"100%\" }}>\r\n          <Sider>\r\n            <LeftNav />\r\n          </Sider>\r\n          <Layout>\r\n            <Header></Header>\r\n            <Content style={{ margin: 20, backgroundColor: \"#fff\" }}>\r\n              <Switch>\r\n                <Redirect exact from=\"/\" to=\"/home\" />\r\n                <Route path=\"/home\" component={Home} />\r\n                <Route path=\"/category\" component={Category} />\r\n                <Route path=\"/role\" component={Role} />\r\n                <Route path=\"/user\" component={User} />\r\n                <Route path=\"/product\" component={Product} />\r\n                <Route path=\"/charts/bar\" component={Bar} />\r\n                <Route path=\"/charts/pie\" component={Pie} />\r\n                <Route path=\"/charts/line\" component={Line} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Content>\r\n            <Footer style={{ textAlign: \"center\", color: \"#ccc\" }}>\r\n              推荐使用谷歌浏览器,可以获得更佳页面操作体验\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    user: state.user,\r\n  }),\r\n  {}\r\n)(Admin);\r\n","import React, { Component } from \"react\";\n//引入路由\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n//引入组件\nimport Login from \"./pages/ligon/Login\";\nimport Admin from \"./pages/admin/Admin\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          {/*匹配到后不再往后面匹配 */}\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/\" component={Admin} /> {/**admin */}\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\n\r\nimport storage from \"../utils/storageUtils\";\r\n\r\nimport {\r\n  SET_HEADER_TITLE,\r\n  RECEIVE_USER,\r\n  SHOW_ERROR_MSG,\r\n  RESET_USER,\r\n} from \"./createTypes\";\r\n\r\nlet initTitle = \"首页\";\r\n//管理头部标题\r\nconst headerTitle = (state = initTitle, action) => {\r\n  switch (action.type) {\r\n    case SET_HEADER_TITLE:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//管理登陆用户\r\nlet initUser = storage.getUser();\r\nconst user = (state = initUser, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_USER:\r\n      return action.user;\r\n    case SHOW_ERROR_MSG:\r\n      const errorMsg = action.errorMsg;\r\n      return { ...state, errorMsg };\r\n    case RESET_USER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//整合多个reducer\r\nexport default combineReducers({\r\n  user,\r\n  headerTitle,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport storageUtils from \"./utils/storageUtils\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport memoryUtils from \"./utils/memoryUtils\";\n//读取本地数据\n\nconst user = storageUtils.getUser();\n//console.log(user);\n\n//存储到内存中\nmemoryUtils.user = user;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}